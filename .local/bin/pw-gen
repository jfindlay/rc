#!/usr/bin/env python

import sys,re,string
from subprocess import Popen,PIPE
from argparse import ArgumentParser,ArgumentDefaultsHelpFormatter

chr = chr if sys.version_info[0] >= 3 else unichr

def parse_args():
  desc = 'create a password from /dev/urandom'
  arg_parser = ArgumentParser(description=desc,formatter_class=ArgumentDefaultsHelpFormatter)
  arg_parser.add_argument('-n','--no-special',action='store_true',help='create alphanumeric password')
  arg_parser.add_argument('-c','--encoding',type=str,default=sys.getdefaultencoding(),help='encoding of password')
  arg_parser.add_argument('-d','--disallowed',type=str,default='',help='disallowed characters')
  def_len = 64
  arg_parser.add_argument('length',nargs='?',default=def_len,type=int,help='password character length [{0}]'.format(def_len))
  return arg_parser.parse_args()

def main():
  args = parse_args()
  pw = []
  allowed = ''.join(set(string.printable) - set(list(args.disallowed)))
  if args.disallowed: print('disallowed: {}'.format(args.disallowed))
  unispace = re.findall('\s',''.join([chr(c) for c in range(0x10ffff+1)]),re.UNICODE)
  for us in unispace:
    allowed = re.sub(us,'',allowed)
  if args.no_special:
    allowed = re.sub('[^a-zA-Z0-9]','',allowed)
  open_kwargs = {'errors': 'ignore'} if sys.version_info[0] >= 3 else {}
  with open('/dev/urandom',mode='r',**open_kwargs) as urandom:
    while len(pw) < args.length:
      char = urandom.read(1)
      if not char in allowed:
        continue
      pw.append(char)
  print(''.join([c for c in pw]))

if __name__ == '__main__' : main()
