#!/usr/bin/env python

import sys,re,string
from argparse import ArgumentParser,ArgumentDefaultsHelpFormatter


chr = chr if sys.version_info[0] >= 3 else unichr
printable_set = set(list(re.sub(r'\s','',string.printable,re.UNICODE)))
alnum_set = set(list(string.ascii_letters + string.digits))
special_set = printable_set - alnum_set


def parse_args():
  desc = 'create a password from /dev/urandom'
  arg_parser = ArgumentParser(description=desc,formatter_class=ArgumentDefaultsHelpFormatter)
  arg_parser.add_argument('-c','--encoding',type=str,default=sys.getdefaultencoding(),help='encoding of password')
  allow_group = arg_parser.add_mutually_exclusive_group()
  allow_group.add_argument('-n','--no-special',action='store_true',help='create alphanumeric password')
  allow_group.add_argument('-a','--allowed-special',type=str,default=''.join(special_set),help='allowed special characters (alphanumeric characters always allowed by default)')
  allow_group.add_argument('-d','--disallowed-special',type=str,help='disallowed special characters (alphanumeric characters always allowed by default)')
  arg_parser.add_argument('length',nargs='?',default=64,type=int,help='password character length')
  return arg_parser.parse_args()


def main():
  args = parse_args()
  pw = []
  if args.no_special:
    allowed_set = alnum_set
  elif args.disallowed_special:
    allowed_set = alnum_set.union(special_set - set(list(args.disallowed_special)))
  elif args.allowed_special:
    allowed_set = alnum_set.union(special_set.intersection(set(list(args.allowed_special))))
  else:
    allowed_set = printable_set
  open_kwargs = {'errors': 'ignore'} if sys.version_info[0] >= 3 else {}
  with open('/dev/urandom',mode='r',**open_kwargs) as urandom:
    while len(pw) < args.length:
      char = urandom.read(1)
      if char in allowed_set:
        pw.append(char)
  print(''.join([c for c in pw]))


if __name__ == '__main__' : main()
